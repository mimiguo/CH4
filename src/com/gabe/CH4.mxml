<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955"
	minHeight="600" applicationComplete="init()">
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import flashx.textLayout.elements.BreakElement;
			
			import mx.core.UIComponent;
			import mx.utils.ObjectUtil;
			
		private var test_so:SharedObject;
		private var web_so:SharedObject;
		private var netConnection:NetConnection;
		private var monthDay:Date;
		private var good:Boolean;
		private var mark_txt:TextField;
		
		private function init() :void
		{
			trace('init');
			var rtmp:String = 'rtmp://fms.2be.com.tw/basicSO';
			netConnection = new NetConnection();
			netConnection.addEventListener(NetStatusEvent.NET_STATUS, makeSO);
			netConnection.connect(rtmp);
			
			mark_txt 		= new TextField();
			mark_txt.text 	= 'im here';
			mark_txt.x 		= 10;
			mark_txt.y 		= 10;
			
			var container:UIComponent = new UIComponent();
			container.addChild(mark_txt);
			addElement(container);
			mark_txt.addEventListener(KeyboardEvent.KEY_UP, moveMark);
			stage.focus = mark_txt;
			txt_ti.addEventListener(FocusEvent.FOCUS_IN, cleanName);
		}

		private function makeSO(e:NetStatusEvent) : void 
		{
			trace(e.info.code);
			good = e.info.code == "NetConnection.Connect.Success";
			
			if (good) {
				trace( netConnection.uri );
				test_so 	= SharedObject.getRemote("test", netConnection.uri, false);
				web_so 		= SharedObject.getRemote("web", netConnection.uri, false);
				monthDay 	= new Date();
				test_so.connect(netConnection);
				test_so.addEventListener(SyncEvent.SYNC, seeSO);
				web_so.connect(netConnection);
				web_so.addEventListener(SyncEvent.SYNC, seeSO);
			}
		}

		private function seeSO(se:SyncEvent) : void 
		{
			for (var cl:uint; cl < se.changeList.length; cl++)
			{
//				trace(se.changeList[cl].code);
				pushMsg(cl + ":" + se.changeList[cl].code);
				if (se.changeList[cl].code == "change") {
					switch(se.changeList[cl].name)
					{
						case 'xpos':
							mark_txt.x = test_so.data.xpos;					
							break;
						case 'ypos':
							mark_txt.y = test_so.data.ypos;					
							break;
						case 'web':
							var webRequest:URLRequest = new URLRequest(web_so.data.web);
							navigateToURL(webRequest, "_blank");
							break;
						default:
							break;
					}	
				}
			}
		}

		private function loadSO() : void 
		{
			test_so.setProperty('city','KS');
			test_so.setProperty('dayOfMonth', monthDay.getDate());
			test_so.setProperty('verity', true);
			test_so.setProperty('bunch', 250);
		}
		
		private function showSO() : void
		{
			trace(test_so.data.city);
		}

		private function moveMark(e:KeyboardEvent) : void 
		{
			switch (e.keyCode)
			{
				case Keyboard.LEFT:
					mark_txt.x -= 5;
				break;
				case Keyboard.RIGHT:
					mark_txt.x += 5;
				break;
				case Keyboard.UP:
					mark_txt.y -= 5;
					break;
				case Keyboard.DOWN:
					mark_txt.y += 5;
					break;
			}
			
			test_so.setProperty('xpos', mark_txt.x);
			test_so.setProperty('ypos', mark_txt.y);
		}
			
		private function pushMsg(msg:String):void
		{
			msg_ta.appendText(msg+"\n");	
		}
			
		private function send():void
		{
		}
		
		private function cleanName(e:FocusEvent):void
		{
			txt_ti.text = "";
		}
		]]>
	</fx:Script>
	<s:VGroup y="100">
		<s:TextArea id="msg_ta" ></s:TextArea>
		<s:TextInput id="txt_ti">test</s:TextInput>
		<s:Button label="open web page" click="send()"></s:Button>
	</s:VGroup>
</s:Application>